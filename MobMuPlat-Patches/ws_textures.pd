#N canvas 49 236 1654 624 10;
#N canvas 189 240 405 339 scales 0;
#X obj 34 224 tabread;
#X obj 34 69 inlet;
#X msg 49 191 set major;
#X obj 34 278 outlet;
#X obj 52 162 loadbang;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 2 0;
#X restore 980 191 pd scales;
#X floatatom 993 146 5 0 0 0 - - -, f 5;
#N canvas 917 164 395 305 dividescale 0;
#X obj 140 39 inlet;
#X text 88 11 divide input range into number of notes;
#X text 270 39 range 0 - 100;
#X obj 203 37 inlet;
#X obj 203 162 /;
#X msg 203 136 100;
#X obj 203 111 t b f;
#X floatatom 226 73 5 0 0 0 - - -, f 5;
#X obj 187 191 div;
#X obj 187 256 outlet;
#X connect 0 0 8 0;
#X connect 3 0 6 0;
#X connect 4 0 8 1;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 6 1 4 1;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X restore 980 121 pd dividescale;
#X obj 1409 18 loadbang;
#X obj 1409 85 s nr-notes;
#X obj 1061 93 r nr-notes;
#X obj 980 169 change;
#N canvas 0 94 580 402 generate-note 0;
#X obj 124 40 inlet;
#N canvas 306 298 1055 653 my-adsr 0;
#X obj 107 189 inlet;
#X obj 443 260 inlet;
#X text 103 164 trigger;
#X obj 107 217 sel 0;
#X obj 252 264 t b;
#X obj 174 373 f \$1;
#X obj 174 398 pack 0 \$2;
#X obj 500 260 inlet;
#X obj 446 390 del \$2;
#X obj 466 538 line~;
#X obj 470 413 f \$4;
#X obj 509 488 pack 0 \$3;
#X obj 562 260 inlet;
#X obj 624 260 inlet;
#X obj 697 259 inlet;
#X msg 107 248 stop;
#X obj 620 415 pack 0 \$5;
#X text 443 238 level;
#X obj 509 464 * \$1;
#X obj 466 563 outlet~;
#X text 110 487 and pack with;
#X text 111 507 attack time;
#X text 33 204 if zero;
#X text 34 221 release;
#X text 14 238 and cancel;
#X text 45 255 decay;
#X text 292 381 on attack \, set a;
#X text 286 414 recall sustain value;
#X text 323 487 pack with decay time;
#X text 613 441 on release ramp;
#X text 614 458 back to zero;
#X obj 470 438 * 0.01;
#X text 496 238 attack;
#X text 563 237 decay;
#X text 617 238 sustain;
#X text 694 238 release;
#X text 210 180 attack;
#X obj 212 201 moses;
#X obj 202 231 t b b;
#X msg 136 399 0;
#X text 28 382 optionally;
#X text 18 400 bash to zero;
#X text 33 355 ATTACK:;
#X text 263 198 test for negative trigger;
#X text 261 222 if so \, zero;
#X text 262 238 the output;
#X text 286 274 in any case;
#X text 311 464 multiply by peak level;
#X text 288 395 delay for sustain;
#X text 284 437 convert from percent;
#X text 163 449 ... then;
#X text 111 468 recall peak level;
#X text 447 222 peak;
#X text 289 258 ... do this;
#X connect 0 0 3 0;
#X connect 1 0 5 1;
#X connect 1 0 18 1;
#X connect 3 0 15 0;
#X connect 3 0 16 0;
#X connect 3 1 37 0;
#X connect 4 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 19 0;
#X connect 10 0 31 0;
#X connect 11 0 9 0;
#X connect 12 0 11 1;
#X connect 13 0 10 1;
#X connect 14 0 16 1;
#X connect 15 0 8 0;
#X connect 16 0 9 0;
#X connect 18 0 11 0;
#X connect 31 0 18 0;
#X connect 37 0 38 0;
#X connect 37 1 4 0;
#X connect 38 0 4 0;
#X connect 38 1 39 0;
#X connect 39 0 9 0;
#X restore 200 257 pd my-adsr;
#X msg 124 76 bang;
#X text 168 77 <-- attack and delayed release;
#X msg 124 189 1;
#X msg 135 125 0;
#X obj 264 102 loadbang;
#X msg 241 129 100;
#X msg 269 129 200;
#X msg 300 129 50;
#X msg 330 129 300;
#X msg 212 129 1;
#X obj 200 293 outlet~;
#X obj 364 168 r adsr-msg;
#X obj 364 192 unpack f f f f f;
#X obj 64 128 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 168 140 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 134 101 del 700;
#X connect 0 0 2 0;
#X connect 1 0 12 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 2 0 17 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 6 0 8 0;
#X connect 6 0 9 0;
#X connect 6 0 10 0;
#X connect 6 0 11 0;
#X connect 7 0 1 2;
#X connect 8 0 1 3;
#X connect 9 0 1 4;
#X connect 10 0 1 5;
#X connect 11 0 1 1;
#X connect 13 0 14 0;
#X connect 14 0 1 1;
#X connect 14 1 1 2;
#X connect 14 2 1 3;
#X connect 14 3 1 4;
#X connect 14 4 1 5;
#X connect 17 0 5 0;
#X connect 17 0 16 0;
#X restore 1013 367 pd generate-note;
#X obj 984 425 *~;
#X obj 1212 596 dac~;
#X obj 1497 102 s adsr-msg;
#X msg 1497 40 1 150 30 200 550;
#N canvas 0 94 748 351 scales-tables 0;
#N canvas 0 50 450 250 (subpatch) 0;
#X array major 12 float 3;
#A 0 40 42 44 45 47 49 51 52 54 56 57 59;
#X coords 0 127 12 0 200 140 1 0 0;
#X restore 33 38 graph;
#X msg 275 46 \; major 0 40 42 44 45 47 49 51 52 54 56 57 59;
#X restore 1125 20 pd scales-tables;
#N canvas 0 94 580 402 generate-note 0;
#X obj 124 40 inlet;
#N canvas 306 298 1055 653 my-adsr 0;
#X obj 107 189 inlet;
#X obj 443 260 inlet;
#X text 103 164 trigger;
#X obj 107 217 sel 0;
#X obj 252 264 t b;
#X obj 174 373 f \$1;
#X obj 174 398 pack 0 \$2;
#X obj 500 260 inlet;
#X obj 446 390 del \$2;
#X obj 466 538 line~;
#X obj 470 413 f \$4;
#X obj 509 488 pack 0 \$3;
#X obj 562 260 inlet;
#X obj 624 260 inlet;
#X obj 697 259 inlet;
#X msg 107 248 stop;
#X obj 620 415 pack 0 \$5;
#X text 443 238 level;
#X obj 509 464 * \$1;
#X obj 466 563 outlet~;
#X text 110 487 and pack with;
#X text 111 507 attack time;
#X text 33 204 if zero;
#X text 34 221 release;
#X text 14 238 and cancel;
#X text 45 255 decay;
#X text 292 381 on attack \, set a;
#X text 286 414 recall sustain value;
#X text 323 487 pack with decay time;
#X text 613 441 on release ramp;
#X text 614 458 back to zero;
#X obj 470 438 * 0.01;
#X text 496 238 attack;
#X text 563 237 decay;
#X text 617 238 sustain;
#X text 694 238 release;
#X text 210 180 attack;
#X obj 212 201 moses;
#X obj 202 231 t b b;
#X msg 136 399 0;
#X text 28 382 optionally;
#X text 18 400 bash to zero;
#X text 33 355 ATTACK:;
#X text 263 198 test for negative trigger;
#X text 261 222 if so \, zero;
#X text 262 238 the output;
#X text 286 274 in any case;
#X text 311 464 multiply by peak level;
#X text 288 395 delay for sustain;
#X text 284 437 convert from percent;
#X text 163 449 ... then;
#X text 111 468 recall peak level;
#X text 447 222 peak;
#X text 289 258 ... do this;
#X connect 0 0 3 0;
#X connect 1 0 5 1;
#X connect 1 0 18 1;
#X connect 3 0 15 0;
#X connect 3 0 16 0;
#X connect 3 1 37 0;
#X connect 4 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 19 0;
#X connect 10 0 31 0;
#X connect 11 0 9 0;
#X connect 12 0 11 1;
#X connect 13 0 10 1;
#X connect 14 0 16 1;
#X connect 15 0 8 0;
#X connect 16 0 9 0;
#X connect 18 0 11 0;
#X connect 31 0 18 0;
#X connect 37 0 38 0;
#X connect 37 1 4 0;
#X connect 38 0 4 0;
#X connect 38 1 39 0;
#X connect 39 0 9 0;
#X restore 200 257 pd my-adsr;
#X msg 124 76 bang;
#X text 168 77 <-- attack and delayed release;
#X obj 135 100 del 500;
#X msg 124 189 1;
#X msg 135 125 0;
#X obj 264 102 loadbang;
#X msg 241 129 100;
#X msg 269 129 200;
#X msg 300 129 50;
#X msg 330 129 300;
#X msg 212 129 1;
#X obj 200 293 outlet~;
#X obj 364 168 r adsr-msg;
#X obj 364 192 unpack f f f f f;
#X connect 0 0 2 0;
#X connect 1 0 13 0;
#X connect 2 0 4 0;
#X connect 2 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 8 0;
#X connect 7 0 9 0;
#X connect 7 0 10 0;
#X connect 7 0 11 0;
#X connect 7 0 12 0;
#X connect 8 0 1 2;
#X connect 9 0 1 3;
#X connect 10 0 1 4;
#X connect 11 0 1 5;
#X connect 12 0 1 1;
#X connect 14 0 15 0;
#X connect 15 0 1 1;
#X connect 15 1 1 2;
#X connect 15 2 1 3;
#X connect 15 3 1 4;
#X connect 15 4 1 5;
#X restore 1245 381 pd generate-note;
#X obj 1230 428 *~;
#X msg 1522 68 1 50 30 90 50;
#X obj 981 214 change;
#X obj 981 239 mtof;
#X floatatom 981 266 5 0 0 0 - - -, f 5;
#X msg 1412 50 12;
#X obj 959 332 noise~;
#X text 1491 14 Load Presets;
#X obj 46 33 receive fromGUI;
#X obj 544 73 route list;
#X obj 543 42 receive fromNetwork;
#X obj 47 64 list trim;
#X obj 51 164 r volume;
#X obj 44 116 s volume;
#X obj 50 203 sel 1 0;
#X msg 79 234 0;
#X obj 561 264 vsl 30 256 0 100 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 880 266 vsl 30 256 0 200 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 544 108 route /accelx /accely /accelz /temp /pressure /altitude
/humidity;
#X floatatom 685 156 5 0 0 0 - - -, f 5;
#X floatatom 791 158 5 0 0 0 - - -, f 5;
#X floatatom 845 150 5 0 0 0 - - -, f 5;
#X obj 610 265 hsl 256 30 0 100 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 514 158 s x;
#X obj 588 154 s y;
#X obj 636 151 s z;
#X obj 562 239 r y;
#X obj 607 237 r x;
#X obj 882 239 r z;
#X obj 764 200 s alt;
#X obj 824 200 s hum;
#X obj 662 198 s temp, f 7;
#X msg 45 234 0.9;
#X text 36 8 Messages received from the phone;
#X floatatom 732 154 5 0 0 0 - - -, f 5;
#X text 541 19 values received from the ESP32;
#X obj 45 280 s vol_master;
#X obj 978 84 r y;
#X obj 962 368 vcf~ 10;
#X obj 1258 509 r vol_master;
#X obj 1228 555 *~;
#X obj 985 459 *~ 2.5;
#X obj 1155 344 noise~;
#X obj 1158 380 vcf~ 10;
#N canvas 189 240 405 339 scales 0;
#X obj 34 224 tabread;
#X obj 34 69 inlet;
#X msg 49 191 set major;
#X obj 34 278 outlet;
#X obj 52 162 loadbang;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 2 0;
#X restore 1176 204 pd scales;
#X floatatom 1189 159 5 0 0 0 - - -, f 5;
#N canvas 917 164 395 305 dividescale 0;
#X obj 140 39 inlet;
#X text 88 11 divide input range into number of notes;
#X text 270 39 range 0 - 100;
#X obj 203 37 inlet;
#X obj 203 162 /;
#X msg 203 136 100;
#X obj 203 111 t b f;
#X floatatom 226 73 5 0 0 0 - - -, f 5;
#X obj 187 191 div;
#X obj 187 256 outlet;
#X connect 0 0 8 0;
#X connect 3 0 6 0;
#X connect 4 0 8 1;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 6 1 4 1;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X restore 1176 134 pd dividescale;
#X obj 1257 106 r nr-notes;
#X obj 1176 182 change;
#X obj 1177 227 change;
#X obj 1177 252 mtof;
#X floatatom 1177 279 5 0 0 0 - - -, f 5;
#X obj 1174 97 r x;
#X obj 1231 463 *~ 2.5;
#N canvas 0 94 580 402 generate-note 0;
#X obj 124 40 inlet;
#N canvas 306 298 1055 653 my-adsr 0;
#X obj 107 189 inlet;
#X obj 443 260 inlet;
#X text 103 164 trigger;
#X obj 107 217 sel 0;
#X obj 252 264 t b;
#X obj 174 373 f \$1;
#X obj 174 398 pack 0 \$2;
#X obj 500 260 inlet;
#X obj 446 390 del \$2;
#X obj 466 538 line~;
#X obj 470 413 f \$4;
#X obj 509 488 pack 0 \$3;
#X obj 562 260 inlet;
#X obj 624 260 inlet;
#X obj 697 259 inlet;
#X msg 107 248 stop;
#X obj 620 415 pack 0 \$5;
#X text 443 238 level;
#X obj 509 464 * \$1;
#X obj 466 563 outlet~;
#X text 110 487 and pack with;
#X text 111 507 attack time;
#X text 33 204 if zero;
#X text 34 221 release;
#X text 14 238 and cancel;
#X text 45 255 decay;
#X text 292 381 on attack \, set a;
#X text 286 414 recall sustain value;
#X text 323 487 pack with decay time;
#X text 613 441 on release ramp;
#X text 614 458 back to zero;
#X obj 470 438 * 0.01;
#X text 496 238 attack;
#X text 563 237 decay;
#X text 617 238 sustain;
#X text 694 238 release;
#X text 210 180 attack;
#X obj 212 201 moses;
#X obj 202 231 t b b;
#X msg 136 399 0;
#X text 28 382 optionally;
#X text 18 400 bash to zero;
#X text 33 355 ATTACK:;
#X text 263 198 test for negative trigger;
#X text 261 222 if so \, zero;
#X text 262 238 the output;
#X text 286 274 in any case;
#X text 311 464 multiply by peak level;
#X text 288 395 delay for sustain;
#X text 284 437 convert from percent;
#X text 163 449 ... then;
#X text 111 468 recall peak level;
#X text 447 222 peak;
#X text 289 258 ... do this;
#X connect 0 0 3 0;
#X connect 1 0 5 1;
#X connect 1 0 18 1;
#X connect 3 0 15 0;
#X connect 3 0 16 0;
#X connect 3 1 37 0;
#X connect 4 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 19 0;
#X connect 10 0 31 0;
#X connect 11 0 9 0;
#X connect 12 0 11 1;
#X connect 13 0 10 1;
#X connect 14 0 16 1;
#X connect 15 0 8 0;
#X connect 16 0 9 0;
#X connect 18 0 11 0;
#X connect 31 0 18 0;
#X connect 37 0 38 0;
#X connect 37 1 4 0;
#X connect 38 0 4 0;
#X connect 38 1 39 0;
#X connect 39 0 9 0;
#X restore 200 257 pd my-adsr;
#X msg 124 76 bang;
#X text 168 77 <-- attack and delayed release;
#X obj 135 100 del 500;
#X msg 124 189 1;
#X msg 135 125 0;
#X obj 264 102 loadbang;
#X msg 241 129 100;
#X msg 269 129 200;
#X msg 300 129 50;
#X msg 330 129 300;
#X msg 212 129 1;
#X obj 200 293 outlet~;
#X obj 364 168 r adsr-msg;
#X obj 364 192 unpack f f f f f;
#X connect 0 0 2 0;
#X connect 1 0 13 0;
#X connect 2 0 4 0;
#X connect 2 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 8 0;
#X connect 7 0 9 0;
#X connect 7 0 10 0;
#X connect 7 0 11 0;
#X connect 7 0 12 0;
#X connect 8 0 1 2;
#X connect 9 0 1 3;
#X connect 10 0 1 4;
#X connect 11 0 1 5;
#X connect 12 0 1 1;
#X connect 14 0 15 0;
#X connect 15 0 1 1;
#X connect 15 1 1 2;
#X connect 15 2 1 3;
#X connect 15 3 1 4;
#X connect 15 4 1 5;
#X restore 1475 412 pd generate-note;
#X obj 1460 459 *~;
#X obj 1385 375 noise~;
#X obj 1388 411 vcf~ 10;
#N canvas 189 240 405 339 scales 0;
#X obj 34 224 tabread;
#X obj 34 69 inlet;
#X msg 49 191 set major;
#X obj 34 278 outlet;
#X obj 52 162 loadbang;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 2 0;
#X restore 1406 235 pd scales;
#X floatatom 1419 190 5 0 0 0 - - -, f 5;
#N canvas 917 164 395 305 dividescale 0;
#X obj 140 39 inlet;
#X text 88 11 divide input range into number of notes;
#X text 270 39 range 0 - 100;
#X obj 203 37 inlet;
#X obj 203 162 /;
#X msg 203 136 100;
#X obj 203 111 t b f;
#X floatatom 226 73 5 0 0 0 - - -, f 5;
#X obj 187 191 div;
#X obj 187 256 outlet;
#X connect 0 0 8 0;
#X connect 3 0 6 0;
#X connect 4 0 8 1;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 6 1 4 1;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X restore 1406 165 pd dividescale;
#X obj 1487 137 r nr-notes;
#X obj 1406 213 change;
#X obj 1407 258 change;
#X obj 1407 283 mtof;
#X floatatom 1407 310 5 0 0 0 - - -, f 5;
#X obj 1461 494 *~ 2.5;
#X obj 1404 128 r z;
#X obj 1407 336 * 0.5;
#X obj 1177 305 * 8;
#X obj 981 292 * 4;
#X obj 175 544 send toGUI, f 33;
#X obj 96 378 r x;
#X obj 129 377 r y;
#X obj 170 377 r z;
#N canvas 0 94 614 457 speedControl 0;
#X obj 43 239 inlet;
#X obj 28 270 f;
#X obj 28 293 outlet;
#X obj 27 127 loadbang;
#X obj 115 241 inlet;
#X obj 100 272 f;
#X obj 100 295 outlet;
#X obj 196 243 inlet;
#X obj 181 274 f;
#X obj 181 297 outlet;
#X obj 27 160 metro 100;
#X text 173 22 Updating your phone display can take a bit of time.
As we expect values from the ESP32 every 3 or 4 ms \, we impose here
a slower rate for the values sent to the display. Audio synthesis is
not affected by this subpatch. It runs at full ESP32 rate.;
#X text 134 206 add one of this for each inout you want to control
;
#X obj 247 243 inlet;
#X obj 232 274 f;
#X obj 232 297 outlet;
#X obj 319 245 inlet;
#X obj 304 276 f;
#X obj 304 299 outlet;
#X obj 400 247 inlet;
#X obj 385 278 f;
#X obj 385 301 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 3 0 10 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 10 0 1 0;
#X connect 10 0 5 0;
#X connect 10 0 8 0;
#X connect 10 0 14 0;
#X connect 10 0 17 0;
#X connect 10 0 20 0;
#X connect 13 0 14 1;
#X connect 14 0 15 0;
#X connect 16 0 17 1;
#X connect 17 0 18 0;
#X connect 19 0 20 1;
#X connect 20 0 21 0;
#X restore 137 454 pd speedControl;
#X text 246 444 control the sending rate;
#X msg 146 506 list /z \$1;
#X msg 26 512 list /xy \$1 \$2;
#X obj 25 485 pack f f;
#X msg 239 504 list /alt \$1;
#X msg 329 505 list /hum \$1;
#X msg 415 506 list /temp \$1;
#X obj 227 378 r alt;
#X obj 264 390 r hum;
#X obj 305 395 r temp;
#X obj 94 413 / 100;
#X obj 133 414 / 100;
#X obj 175 413 / 100;
#X text 42 318 Sending values to the phone app;
#X obj 46 92 route /on /presets;
#X obj 126 121 unpack f f f;
#X obj 243 154 s p_value;
#X obj 125 154 s p_column;
#X obj 192 154 s p_row;
#X text 187 71 For example \, /on controls the main volume;
#X text 192 90 we also receive the infomation of presets;
#X connect 0 0 16 0;
#X connect 2 0 1 0;
#X connect 2 0 6 0;
#X connect 3 0 19 0;
#X connect 3 0 11 0;
#X connect 5 0 2 1;
#X connect 6 0 0 0;
#X connect 7 0 8 1;
#X connect 8 0 55 0;
#X connect 11 0 10 0;
#X connect 13 0 14 1;
#X connect 14 0 67 0;
#X connect 15 0 10 0;
#X connect 16 0 7 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 84 0;
#X connect 19 0 4 0;
#X connect 20 0 52 0;
#X connect 22 0 25 0;
#X connect 23 0 32 0;
#X connect 24 0 23 0;
#X connect 25 0 104 0;
#X connect 26 0 28 0;
#X connect 28 0 46 0;
#X connect 28 1 29 0;
#X connect 29 0 50 0;
#X connect 32 0 37 0;
#X connect 32 1 38 0;
#X connect 32 2 39 0;
#X connect 32 3 33 0;
#X connect 32 3 45 0;
#X connect 32 4 48 0;
#X connect 32 5 34 0;
#X connect 32 5 43 0;
#X connect 32 6 35 0;
#X connect 32 6 44 0;
#X connect 40 0 30 0;
#X connect 41 0 36 0;
#X connect 42 0 31 0;
#X connect 46 0 50 0;
#X connect 51 0 2 0;
#X connect 52 0 8 0;
#X connect 53 0 54 1;
#X connect 54 0 9 0;
#X connect 54 0 9 1;
#X connect 55 0 54 0;
#X connect 56 0 57 0;
#X connect 57 0 14 0;
#X connect 58 0 63 0;
#X connect 60 0 59 0;
#X connect 60 0 62 0;
#X connect 61 0 60 1;
#X connect 62 0 58 0;
#X connect 63 0 64 0;
#X connect 63 0 13 0;
#X connect 64 0 65 0;
#X connect 65 0 83 0;
#X connect 66 0 60 0;
#X connect 67 0 54 0;
#X connect 68 0 69 1;
#X connect 69 0 80 0;
#X connect 70 0 71 0;
#X connect 71 0 69 0;
#X connect 72 0 77 0;
#X connect 74 0 73 0;
#X connect 74 0 76 0;
#X connect 75 0 74 1;
#X connect 76 0 72 0;
#X connect 77 0 78 0;
#X connect 77 0 68 0;
#X connect 78 0 79 0;
#X connect 79 0 82 0;
#X connect 80 0 54 0;
#X connect 81 0 74 0;
#X connect 82 0 71 1;
#X connect 83 0 57 1;
#X connect 84 0 52 1;
#X connect 86 0 100 0;
#X connect 87 0 101 0;
#X connect 88 0 102 0;
#X connect 89 0 93 0;
#X connect 89 1 93 1;
#X connect 89 2 91 0;
#X connect 89 3 94 0;
#X connect 89 4 95 0;
#X connect 89 5 96 0;
#X connect 91 0 85 0;
#X connect 92 0 85 0;
#X connect 93 0 92 0;
#X connect 94 0 85 0;
#X connect 95 0 85 0;
#X connect 96 0 85 0;
#X connect 97 0 89 3;
#X connect 98 0 89 4;
#X connect 99 0 89 5;
#X connect 100 0 89 0;
#X connect 101 0 89 1;
#X connect 102 0 89 2;
#X connect 104 0 27 0;
#X connect 104 1 105 0;
#X connect 105 0 107 0;
#X connect 105 1 108 0;
#X connect 105 2 106 0;
